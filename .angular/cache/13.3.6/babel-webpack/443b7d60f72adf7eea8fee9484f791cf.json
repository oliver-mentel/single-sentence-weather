{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.inputValue = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.weatherSearchForm = this.formBuilder.group({\n        location: ['']\n      });\n    }\n\n    onSubmit(formValues) {\n      this.inputValue.emit(formValues.location);\n      this.weatherSearchForm.reset();\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    outputs: {\n      inputValue: \"inputValue\"\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"card\"], [1, \"search-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"weatherLocation\", \"aria-describedby\", \"weatherLocation\", \"placeholder\", \"Search Location\", \"formControlName\", \"location\", 1, \"form-control\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 1, \"btn-submit\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function SearchComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit(ctx.weatherSearchForm.value);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5, \" Go \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.weatherSearchForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;width:-moz-fit-content;width:fit-content;height:-moz-fit-content;height:fit-content;border-radius:5px}.search-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;margin-bottom:30px}.card-header[_ngcontent-%COMP%]{align-self:flex-start}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;color:none}input[_ngcontent-%COMP%]{width:15rem;height:2rem;border-radius:50px;margin-bottom:1em;border:none;padding:5px;font-size:1rem;background-color:#fff;text-align:center}input[_ngcontent-%COMP%]:focus, textarea[_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{transition:.5s;outline:#194c92}.btn-submit[_ngcontent-%COMP%]{background-color:#848484b3;border-radius:5px;border:none;color:#fff;padding:10px;font-weight:200;font-size:1rem;cursor:pointer}.btn-submit[_ngcontent-%COMP%]:hover{transition:.3s;background:#dadada;color:#3e3e3e}\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}